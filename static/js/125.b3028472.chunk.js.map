{"version":3,"file":"static/js/125.b3028472.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contacts/form/Form.module.css?3a5e","redux/selctors.js","components/Contacts/form/Form.jsx","webpack://react-homework-template/./src/components/Contacts/contactList/ContactList.module.css?931c","components/Contacts/contactList/ContactList.jsx","webpack://react-homework-template/./src/components/Contacts/filter/Filter.module.css?79f4","components/Contacts/filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Contact.module.css?0098","components/Contacts/Contact.jsx","pages/PhoneBooksPage/PhoneBooksPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__v9Auz\",\"label\":\"Form_label__hinnL\",\"input\":\"Form_input__VeVG3\",\"submit\":\"Form_submit__cVibs\"};","export const getAllContacts = store => store.contacts;\nexport const getFiltered = store => {\n  const { contacts, filter } = store;\n  if (!filter) {\n    return contacts;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredBooks = contacts.filter(({ name, number }) => {\n    const normalizedTitle = name.toLowerCase();\n    const normalizedAuthor = number.toLowerCase();\n\n    return (\n      normalizedAuthor.includes(normalizedFilter) ||\n      normalizedTitle.includes(normalizedFilter)\n    );\n  });\n\n  return filteredBooks;\n};\nexport const getFilter = store => store.filter;\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Form.module.css';\nimport { getFiltered } from '../../../redux/selctors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../../redux/contacts/contacts-slice';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\nconst Form = () => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const contacts = useSelector(getFiltered);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onAddContact({ ...state });\n    reset();\n  };\n\n  const isDublicate = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    const normalizedNumber = number.toLowerCase();\n\n    const dublicate = contacts.find(item => {\n      const normalizedCurrentName = item.name.toLowerCase();\n      const normalizedCurrentNumber = item.number.toLowerCase();\n      return (\n        normalizedCurrentName === normalizedName ||\n        normalizedCurrentNumber === normalizedNumber\n      );\n    });\n\n    return Boolean(dublicate);\n  };\n  const onAddContact = data => {\n    if (isDublicate(data)) {\n      return alert(`Book with ${data.number} and ${data.name} already in list`);\n    }\n\n    dispatch(addContact(data));\n  };\n\n  const reset = () => {\n    setState({ name: '', number: '' });\n  };\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label htmlFor={nameInputId} className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n          onChange={handleChange}\n          id={nameInputId}\n          required\n        />\n      </label>\n      <label htmlFor={numberInputId} className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={state.number}\n          onChange={handleChange}\n          id={numberInputId}\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={css.submit}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__JFruW\",\"item\":\"ContactList_item__+lAjJ\",\"delete\":\"ContactList_delete__PvS9Z\"};","import css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../redux/contacts/contacts-slice';\nimport { getFiltered } from '../../../redux/selctors';\nexport const ContactList = () => {\n  const contacts = useSelector(getFiltered);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul className={css.list}>\n      {contacts.map(({ name, id, number }) => (\n        <li key={id} className={css.item}>\n          {name}: {number}\n          <button onClick={() => onDeleteContact(id)} className={css.delete}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Filter_form__ZUxlI\",\"filterLabel\":\"Filter_filterLabel__-02Nb\",\"filterInput\":\"Filter_filterInput__fgy9k\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../../redux/filter/filter-slice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const changeFitler = ({ target }) => dispatch(setFilter(target.value));\n  return (\n    <form className={css.form}>\n      <label className={css.filterLabel}>\n        Filter\n        <input\n          type=\"text\"\n          onChange={changeFitler}\n          className={css.filterInput}\n        />\n      </label>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Contact_section__xMmp-\",\"titleContacts\":\"Contact_titleContacts__OjBT6\",\"title\":\"Contact_title__oR72+\"};","import React from 'react';\nimport Form from './form/Form';\nimport { ContactList } from './contactList/ContactList';\nimport { Filter } from './filter/Filter';\n\nimport css from './Contact.module.css';\nexport const Contact = () => {\n  return (\n    <section className={css.section}>\n      <h1 className={css.title}>Phonebook</h1>\n      <Form></Form>\n\n      <Filter></Filter>\n      <h2 className={css.titleContacts}> Contacts</h2>\n      <ContactList></ContactList>\n    </section>\n  );\n};\n","import { Contact } from 'components/Contacts/Contact';\nimport { Outlet } from 'react-router-dom';\n\nconst PhoneBooksPage = () => {\n  return (\n    <div>\n      <section>\n        <Contact></Contact>\n      </section>\n      <Outlet></Outlet>\n    </div>\n  );\n};\n\nexport default PhoneBooksPage;\n"],"names":["getFiltered","store","contacts","filter","normalizedFilter","toLowerCase","_ref","name","number","normalizedTitle","includes","INITIAL_STATE","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","useSelector","dispatch","useDispatch","handleChange","target","value","_defineProperty","onAddContact","data","_ref2","normalizedName","normalizedNumber","dublicate","find","item","normalizedCurrentName","normalizedCurrentNumber","Boolean","isDublicate","alert","concat","addContact","reset","nameInputId","nanoid","numberInputId","_jsxs","onSubmit","e","preventDefault","className","css","children","htmlFor","_jsx","type","onChange","id","required","ContactList","map","onClick","deleteContact","onDeleteContact","Filter","setFilter","Contact","Form","Outlet"],"sourceRoot":""}